name: ArgoCD

on:
  workflow_dispatch:
    inputs:
      chain:
        description: 'Chain'
        required: true
        type: choice
        options:
        - brooklyn
        - sydney

permissions:
      contents: write
      pull-requests: write
      id-token: write

jobs:
  argocd-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Get Image Tag
        id: image_full_ref
        env:
          S3_BUCKET: ggx-docker-image-tags
          CHAIN: ${{ inputs.chain }}
        run: |
          echo "Chain: $CHAIN"
          aws s3 cp s3://$S3_BUCKET/${CHAIN}_version ${CHAIN}_version
          export TAG=$(cat ${CHAIN}_version)
          echo "TAG=$(cat ${CHAIN}_version)" >> $GITHUB_ENV
          echo "BROOKLYN_IMAGE=public.ecr.aws/c6u3u5c0/ggxchain-node:brooklyn-$TAG" >> "$GITHUB_OUTPUT"
          echo "SYDNEY_IMAGE=public.ecr.aws/c6u3u5c0/ggxchain-node:sydney-$TAG" >> "$GITHUB_OUTPUT"
          # for now they're build with the same commit IDs. Pipeline may change in future.

      - name: Generate Token
        id: generate_token
        uses: getsentry/action-github-app-token@v2
        with:
          private_key: ${{ secrets.GH_APP_PRIVATE_KEY }}
          app_id: ${{ secrets.GH_APP_ID }}

      - name: Check out argocd code
        uses: actions/checkout@v4
        with:
          repository: ggxchain/ggx-argocd-apps
          ref: main
          path: eksdeploy
          token: ${{ steps.generate_token.outputs.token }}

      - name: Update Image Version of Brooklyn Archive
        if:  ${{ inputs.chain == 'brooklyn' }}
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'kustomization/overlays/brooklyn/archive/sts.yaml'
          propertyPath: 'spec.template.spec.containers[0].image'
          value: ${{ steps.image_full_ref.outputs.BROOKLYN_IMAGE }}
          commitChange: false
          workDir: eksdeploy

      - name: Update Image Version of Brooklyn Validator-01
        if:  ${{ inputs.chain == 'brooklyn' }}
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'kustomization/overlays/brooklyn/validator-01/sts.yaml'
          propertyPath: 'spec.template.spec.containers[0].image'
          value: ${{ steps.image_full_ref.outputs.BROOKLYN_IMAGE }}
          commitChange: false
          workDir: eksdeploy

      - name: Update Image Version of Brooklyn Validator-02
        if:  ${{ inputs.chain == 'brooklyn' }}
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'kustomization/overlays/brooklyn/validator-02/sts.yaml'
          propertyPath: 'spec.template.spec.containers[0].image'
          value: ${{ steps.image_full_ref.outputs.BROOKLYN_IMAGE }}
          commitChange: false
          workDir: eksdeploy

      - name: Update Image Version of Sydney Archive
        if:  ${{ inputs.chain == 'sydney' }}
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'kustomization/overlays/sydney/archive/sts.yaml'
          propertyPath: 'spec.template.spec.containers[0].image'
          value: ${{ steps.image_full_ref.outputs.SYDNEY_IMAGE }}
          commitChange: false
          workDir: eksdeploy

      - name: Update Image Version of Sydney Validator-01
        if:  ${{ inputs.chain == 'sydney' }}
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'kustomization/overlays/sydney/validator-01/sts.yaml'
          propertyPath: 'spec.template.spec.containers[0].image'
          value: ${{ steps.image_full_ref.outputs.SYDNEY_IMAGE }}
          commitChange: false
          workDir: eksdeploy

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          path: eksdeploy
          token: ${{ steps.generate_token.outputs.token }}
          title: "Update ggxchain-node version to ${{ env.TAG }}"
          branch: ggxchain-node-${{ env.TAG}}
          delete-branch: true
          commit-message: "auto deploy ggxchain-node-${{ env.TAG }}"

      - name: Check outputs
        if: ${{ steps.cpr.outputs.pull-request-number }}
        run: |
          echo "Accept Pull Request to deploy this version - ${{ steps.cpr.outputs.pull-request-url }}" >> $GITHUB_STEP_SUMMARY
