apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: substrate-brooklyn
  namespace: substrate-brooklyn
spec:
  serviceName: substrate-brooklyn
  selector:
    matchLabels:
      app: substrate-brooklyn
  replicas: 3
  template:
    metadata:
      labels:
        app: substrate-brooklyn
    spec:
      #nodeSelector:
      #  environment: brooklyn # EKS worker-node-groups will be defined later on
      initContainers:
        - name: json-installer
          image: busybox
          imagePullPolicy: "IfNotPresent"
          command: ["wget", "-O", "/tmp/$(CHAINSPEC)", "https://golden-gate-substrate-chain-spec-files.s3.eu-central-1.amazonaws.com/$(CHAINSPEC)" ]
          envFrom:
            - configMapRef:
                name: ggx-node-config
          volumeMounts: 
            - name: chain-info
              mountPath: /tmp
      containers:
        - name: substrate-brooklyn
          image: public.ecr.aws/f8n4k6v0/golden-gate-node:e23018bd
          imagePullPolicy: "IfNotPresent"
          command: [ "/usr/src/app/target/release/golden-gate-node" ]
          args: ["--base-path=/chain-data", "--name=$(NAME)", "--chain=/chain-info/$(CHAINSPEC)", "--validator", "--password=$(PASSWORD)", "--telemetry-url=$(TELEMETRY)"]
          envFrom:
            - configMapRef:
                name: ggx-node-config
            - secretRef:
                name: ggx-node-secret
          resources:
            requests:
              cpu: 1000m
              memory: 2G
            limits:
              cpu: 4000m
              memory: 8G
          ports:
            - containerPort: 9944
            - containerPort: 9933
            - containerPort: 30333
          volumeMounts:
            - name: substrate-brooklyn-data
              mountPath: /chain-data
            - name: chain-info
              mountPath: /chain-info
      volumes:
        - name: chain-info
          emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: substrate-brooklyn-data
      labels:
        app: substrate-brooklyn
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Gi
