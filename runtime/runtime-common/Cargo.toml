[package]
name = "runtime-common"
version.workspace = true
authors.workspace = true
edition.workspace = true
repository.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
scale-codec = { package = "parity-scale-codec", workspace = true }
scale-info.workspace = true
serde = { workspace = true, optional = true }

frame-support.workspace = true
frame-system.workspace = true
pallet-session = { workspace = true, features = ["historical"] }
sp-core.workspace = true
sp-runtime.workspace = true
sp-staking.workspace = true
sp-std.workspace = true

pallet-authorship.workspace = true
pallet-balances.workspace = true
pallet-contracts = { workspace = true, optional = true }
pallet-evm = { workspace = true, features = ["forbid-evm-reentrancy"], optional = true }
pallet-evm-eth-receipt-provider = { workspace = true, optional = true }
pallet-evm-precompile-blake2 = { workspace = true, optional = true }
pallet-evm-precompile-bn128 = { workspace = true, optional = true }
pallet-evm-precompile-ed25519 = { workspace = true, optional = true }
pallet-evm-precompile-modexp = { workspace = true, optional = true }
pallet-evm-precompile-session = { workspace = true, optional = true }
pallet-evm-precompile-sha3fips = { workspace = true, optional = true }
pallet-evm-precompile-simple = { workspace = true, optional = true }
pallet-evm-precompile-sr25519 = { workspace = true, optional = true }
pallet-evm-precompile-substrate-ecdsa = { workspace = true, optional = true }
pallet-evm-precompile-xvm = { workspace = true, optional = true }
pallet-evm-precompile-zk-groth16-verify = { workspace = true, optional = true }
pallet-scheduler.workspace = true
pallet-staking.workspace = true
pallet-xvm = { workspace = true, optional = true }

pallet-receipt-registry = { workspace = true, optional = true }

# eth abi
cfg-if.workspace = true
log.workspace = true

# Orml
orml-asset-registry.workspace = true
orml-tokens.workspace = true
orml-traits.workspace = true

# BTC bridge
btc-relay.workspace = true
clients-info.workspace = true
fee.workspace = true
issue.workspace = true
loans.workspace = true
nomination.workspace = true
oracle.workspace = true
primitives.workspace = true
redeem.workspace = true
replace.workspace = true
security.workspace = true
vault-registry.workspace = true

# dex
pallet-ggx-tokens.workspace = true

[dev-dependencies]
env_logger.workspace = true
frame-election-provider-support = { workspace = true, features = ["std"] }
pallet-aura = { workspace = true, features = ["std"] }
pallet-evm = { workspace = true, features = ["std", "forbid-evm-reentrancy"] }
pallet-timestamp = { workspace = true, features = ["std"] }
pallet-treasury = { workspace = true, features = ["std"] }
paste.workspace = true
proptest.workspace = true
sp-consensus-aura.workspace = true
sp-io.workspace = true
test-strategy.workspace = true

[features]
default = ["std", "pos"]
precompiles = [
	"pallet-contracts",
	"pallet-evm",
	"pallet-evm-precompile-blake2",
	"pallet-evm-precompile-bn128",
	"pallet-evm-precompile-ed25519",
	"pallet-evm-precompile-modexp",
	"pallet-evm-precompile-sha3fips",
	"pallet-evm-precompile-simple",
	"pallet-evm-precompile-sr25519",
	"pallet-evm-precompile-substrate-ecdsa",
	"pallet-evm-precompile-xvm",
	"pallet-evm-precompile-session",
	"pallet-evm-precompile-zk-groth16-verify",
	"pallet-xvm",
	"pallet-evm-eth-receipt-provider",
	"pallet-receipt-registry",
]
pos = ["pallet-evm"]
std = [
	"serde/std",
	"scale-codec/std",
	"scale-info/std",
	"frame-support/std",
	"frame-system/std",
	"pallet-session/std",
	"sp-core/std",
	"sp-staking/std",
	"sp-std/std",

	"pallet-authorship/std",
	"pallet-balances/std",
	"pallet-staking/std",
	"pallet-scheduler/std",

	"pallet-contracts?/std",
	"pallet-evm?/std",
	"pallet-evm-eth-receipt-provider?/std",
	"pallet-evm-precompile-blake2?/std",
	"pallet-evm-precompile-bn128?/std",
	"pallet-evm-precompile-ed25519?/std",
	"pallet-evm-precompile-modexp?/std",
	"pallet-evm-precompile-sha3fips?/std",
	"pallet-evm-precompile-simple?/std",
	"pallet-evm-precompile-sr25519?/std",
	"pallet-evm-precompile-substrate-ecdsa?/std",
	"pallet-evm-precompile-xvm?/std",
	"pallet-evm-precompile-session?/std",
	"pallet-evm-precompile-zk-groth16-verify?/std",
	"pallet-xvm?/std",

	# Orml
	"orml-asset-registry/std",
	"orml-tokens/std",
	"orml-traits/std",
	# BTC bridge
	"btc-relay/std",
	"clients-info/std",
	"fee/std",
	"issue/std",
	"loans/std",
	"nomination/std",
	"oracle/std",
	"primitives/std",
	"redeem/std",
	"replace/std",
	"security/std",
	"vault-registry/std",

	# dex
	"pallet-ggx-tokens/std",
]
