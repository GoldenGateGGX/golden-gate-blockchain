[package]
name = "golden-gate-runtime-testnet"
version = "0.0.0"
license = "Unlicense"
description = "Golden Gate PoS Runtime"
publish = false
authors.workspace = true
edition.workspace = true
repository.workspace = true

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
scale-codec = { package = "parity-scale-codec", workspace = true }
scale-info.workspace = true

# Substrate
pallet-beefy.workspace = true
pallet-beefy-mmr.workspace = true
sp-api.workspace = true
sp-block-builder.workspace = true
sp-consensus-aura.workspace = true
sp-consensus-beefy.workspace = true
sp-core.workspace = true
sp-inherents.workspace = true
sp-io.workspace = true
sp-mmr-primitives.workspace = true
sp-offchain.workspace = true
sp-runtime.workspace = true
sp-session.workspace = true
sp-staking.workspace = true
sp-std.workspace = true
sp-transaction-pool.workspace = true
sp-version.workspace = true
# Substrate FRAME
frame-benchmarking = { workspace = true, optional = true }
frame-executive.workspace = true
frame-support.workspace = true
frame-system-benchmarking = { workspace = true, optional = true }
frame-system-rpc-runtime-api.workspace = true
frame-system.workspace = true
pallet-assets.workspace = true
pallet-aura.workspace = true
pallet-authorship.workspace = true
pallet-balances.workspace = true
pallet-bounties.workspace = true
pallet-grandpa.workspace = true
pallet-identity.workspace = true
pallet-im-online.workspace = true
pallet-indices.workspace = true
pallet-mmr.workspace = true
pallet-multisig.workspace = true
pallet-offences.workspace = true
pallet-proxy.workspace = true
pallet-session = { workspace = true, features = ["historical"] }
pallet-sudo.workspace = true
pallet-timestamp.workspace = true
pallet-transaction-payment-rpc-runtime-api.workspace = true
pallet-transaction-payment.workspace = true
pallet-treasury.workspace = true
pallet-vesting.workspace = true

# Frontier
fp-rpc.workspace = true
fp-self-contained.workspace = true

# Frontier FRAME
pallet-base-fee.workspace = true
pallet-dynamic-fee.workspace = true
pallet-ethereum.workspace = true
pallet-evm = { workspace = true, features = ["forbid-evm-reentrancy"] }
pallet-evm-chain-id.workspace = true
pallet-hotfix-sufficients.workspace = true

# GGX
runtime-common = { workspace = true, features = ["precompiles"] }

# Astar
astar-primitives.workspace = true
pallet-chain-extension-xvm.workspace = true
pallet-ethereum-checked.workspace = true
pallet-xvm = { workspace = true, default-features = false, features = ["evm", "wasm"] }

# Wasm contracts
pallet-contracts-primitives.workspace = true
pallet-contracts.workspace = true
pallet-randomness-collective-flip.workspace = true

# Ibc
# pallet-ibc.workspace = true
# pallet-ics20-transfer.workspace = true
# pallet-ibc-utils.workspace = true
# ibc.workspace = true
# ibc-proto.workspace = true
# prost.workspace = true

# webb-tools
pallet-eth2-light-client.workspace = true

[build-dependencies]
substrate-wasm-builder.workspace = true

[features]
default = ["std", "aura", "with-rocksdb-weights"]
aura = []
manual-seal = ["with-rocksdb-weights"]
with-rocksdb-weights = []
with-paritydb-weights = []
std = [
	"scale-codec/std",
	"scale-info/std",
	# Substrate
	"sp-api/std",
	"sp-block-builder/std",
	"sp-consensus-aura/std",
	"sp-consensus-beefy/std",
	"sp-core/std",
	"sp-inherents/std",
	"sp-mmr-primitives/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-staking/std",
	"sp-std/std",
	"sp-transaction-pool/std",
	"sp-version/std",
	# Substrate FRAME
	"frame-benchmarking/std",
	"frame-executive/std",
	"frame-support/std",
	"frame-system/std",
	"frame-system-rpc-runtime-api/std",
	"pallet-assets/std",
	"pallet-aura/std",
	"pallet-authorship/std",
	"pallet-balances/std",
	"pallet-beefy/std",
	"pallet-beefy-mmr/std",
	"pallet-bounties/std",
	"pallet-grandpa/std",
	"pallet-identity/std",
	"pallet-im-online/std",
	"pallet-indices/std",
	"pallet-mmr/std",
	"pallet-multisig/std",
	"pallet-offences/std",
	"pallet-proxy/std",
	"pallet-session/std",
	"pallet-sudo/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-treasury/std",
	"pallet-vesting/std",
	# Frontier
	"fp-rpc/std",
	"fp-self-contained/std",
	# Frontier FRAME
	"pallet-base-fee/std",
	"pallet-dynamic-fee/std",
	"pallet-ethereum/std",
	"pallet-evm/std",
	"pallet-evm-chain-id/std",
	"pallet-hotfix-sufficients/std",
	# GGX
	"runtime-common/std",
	# Astar
	"pallet-chain-extension-xvm/std",
	"pallet-xvm/std",
	"pallet-ethereum-checked/std",
	# Wasm contracts
	"pallet-contracts/std",
	"pallet-contracts-primitives/std",
	"pallet-randomness-collective-flip/std",
	# IBC
	# "pallet-ibc/std",
	# "pallet-ics20-transfer/std",
	# "pallet-ibc-utils/std",
	#  webb-tools
	"pallet-eth2-light-client/std",
]
runtime-benchmarks = [
	"frame-benchmarking/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-grandpa/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-ethereum/runtime-benchmarks",
	"pallet-evm/runtime-benchmarks",
	"pallet-hotfix-sufficients/runtime-benchmarks",
]
